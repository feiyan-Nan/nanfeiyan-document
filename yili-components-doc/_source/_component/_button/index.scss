@import "../../_scss/variables";
@import "../../_scss/mixin";

$btn-default: map-get($btns, md);
$btn-active-opacity: 0.5;

%cbtn-base {
  display: inline;
  height: map-get($btn-default, height);
  padding: 0 map-get($btn-default, padding);
  border-width: 1px;
  border-style: solid;
  border-radius: map-get($btn-default, radius);
  font-size: map-get($btn-default, font);
  font-weight: 500;
  white-space: nowrap;
  outline: 0;
  user-select: none;
  cursor: pointer;
  transition: $all-transition;

  @each $key, $value in $btns {
    &.#{$key} {
      height: map-get($value, height);
      padding: 0 map-get($value, padding);
      border-radius: map-get($value, radius);
      font-size: map-get($value, font);
    }
    // 圆角
    &.radius {
      border-radius: map-get($value, height) / 2;
    }
  }

  &.invalid {
    cursor: default;
    opacity: $btn-active-opacity;
  }
  &.disabled {
    cursor: not-allowed;
    opacity: $btn-active-opacity;
  }
}

// 常规按钮
.yi-button {
  @extend %cbtn-base;
  @include mixinBaseColor(background-color);
  @include mixinBaseColor(border-color);
  color: $color-blank;
  background: $color-primary;
  border-color: $color-primary;

  @each $key, $value in $key-colors {
    &.#{$key} {
      &:hover {
        background-color: lighten($value, 10);
      }
      &:active {
        background-color: darken($value, 10);
      }
      &.disabled {
        &:hover {
          background-color: $value !important;
        }
      }
    }
  }
}

// 边框按钮
.yi-button-line {
  @extend %cbtn-base;
  border-color: $color-border;
  color: $color-tip;
  background: transparent;
  @include mixinBaseColor(border-color);
  @include mixinBaseColor(color);

  @each $key, $value in $colors {
    &.#{$key} {
      &:hover {
        background-color: rgba($value, 0.05);
      }
      &:active {
        background-color: rgba($value, 0.1);
      }
    }
  }

  &.disabled {
    &:hover {
      background-color: transparent !important;
    }
  }
  &.dashed {
    border-style: dashed;
  }

  &.text {
    border-color: transparent;
  }
}
